{"version":3,"sources":["app/LandingPage.jsx","app/services/yelpService.js","app/services/reuseableFunctions.js","app/components/YelpCard.jsx","app/RollTheDice.jsx","app/ContentRouter.jsx","app/schemas/SearchForm.js","app/SearchForm.jsx","app/actions/searchActions.js","app/AppNavbar.jsx","app/reducers/searchReducer.js","app/reducers/index.js","store.js","App.jsx","index.js"],"names":["LandingPage","props","_this","windowScrollTop","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","resetTransform","window","pageYOffset","setState","transform","innerWidth","state","document","body","classList","add","addEventListener","removeEventListener","_this2","react_default","a","createElement","Fragment","className","style","backgroundImage","Container","Button","onClick","history","push","Component","getBusinesses","data","config","method","axios","shuffleResults","arr","i","length","j","Math","floor","random","_ref","YelpCard","distance","round","business","Card","href","url","height","display","alignItems","overflow","CardImg","src","image_url","flex","width","CardTitle","tag","name","CardText","react_rating_esm","readonly","initialRating","rating","emptySymbol","fullSymbol","concat","location","address1","city","zip_code","display_phone","price","review_count","categories","map","item","index","title","React","RollTheDice","results","handleLocationLogic","search","rtd","getGeoLocation","position","objectSpread","longitude","coords","latitude","yelpService","then","response","businesses","shuffleAndSlice","swal","fire","type","text","background","error","description","catch","console","log","three","slice","prevProps","navigator","geolocation","getCurrentPosition","throwSwalLocationError","Row","marginTop","Col","sm","key","id","components_YelpCard","size","color","connect","ContentRouter","react_router","path","component","initialValues","category","useLocation","radius","open_now","validationSchema","yup","shape","required","when","is","otherwise","SearchForm","isOpen","toggleModal","priceBtn","selected","indexOf","splice","toConsumableArray","getBusiness","searchObj","term","priceStr","forEach","substr","setSearch","checkUseLocation","e","NavLink","Modal","toggle","modalClassName","data-dismiss","aria-label","formik_esm","onSubmit","values","handleChange","handleBlur","handleSubmit","ModalBody","Input","placeholder","value","onChange","onFocus","categoryFocus","onBlur","msg","locationFocus","disabled","FormGroup","check","Label","backgroundColor","render","inline","repeat","ModalFooter","withRouter","posts","items","dispatch","payload","AppNavbar","navbarColor","changeNavbarColor","documentElement","scrollTop","handleRoutes","route","handleRollTheDice","resetSearch","Navbar","expand","NavbarBrand","to","Link","UncontrolledCollapse","navbar","toggler","xs","Nav","NavItem","app_SearchForm","initialState","limit","combineReducers","arguments","undefined","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","App","es","react_router_dom","app_AppNavbar","app_ContentRouter","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.ade9a228.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Button } from 'reactstrap'\r\n\r\n\r\n\r\nclass LandingPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let windowScrollTop;\r\n        if (window.innerWidth >= 768) {\r\n            windowScrollTop = window.pageYOffset / 3;\r\n        } else {\r\n            windowScrollTop = 0;\r\n        }\r\n        this.state = {\r\n            transform: \"translate3d(0,\" + windowScrollTop + \"px,0)\"\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        document.body.classList.add(\"ecommerce-page\");\r\n        if (window.innerWidth >= 768) {\r\n            var windowScrollTop = window.pageYOffset / 3;\r\n            this.setState({\r\n                transform: \"translate3d(0,\" + windowScrollTop + \"px,0)\"\r\n            });\r\n            window.addEventListener(\"scroll\", this.resetTransform);\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        if (window.innerWidth >= 768) {\r\n            window.removeEventListener(\"scroll\", this.resetTransform);\r\n        }\r\n    }\r\n    resetTransform = () => {\r\n        var windowScrollTop = window.pageYOffset / 3;\r\n        this.setState({\r\n            transform: \"translate3d(0,\" + windowScrollTop + \"px,0)\"\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"header header-1\">\r\n                        <div className=\"page-header header-filter\">\r\n                            <div\r\n                                className=\"page-header-image\"\r\n                                style={{\r\n                                    backgroundImage:\r\n                                        \"url(https://foodrevolution.org/wp-content/uploads/blog-featured_healthy_foods-20180306.jpg)\",\r\n                                    transform: this.state.transform\r\n                                }}\r\n                            />\r\n                            <Container>\r\n                                <div className=\"mr-auto text-left col-md-7 col-lg-6\">\r\n                                    <h1 className=\"title\">Pick a Place</h1>\r\n                                </div>\r\n                            </Container>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main\">\r\n                        <div className=\"section\">\r\n                            <Container className=\"mx-auto text-center\">\r\n                                <h3>Don't know what to eat?</h3>\r\n                                <h4>Let the fates decide for you</h4>\r\n                                <Button\r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={() => {this.props.history.push(\"/rtd\")}}\r\n                                >Roll the Dice\r\n                                </Button>\r\n                            </Container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage","import axios from 'axios'\r\n\r\nconst getBusinesses = data => {\r\n    let url = \"api/yelp\"\r\n    const config = {\r\n        method: \"POST\",\r\n        data: data\r\n    }\r\n    return axios(url, config)\r\n}\r\n\r\nexport { getBusinesses }","export const shuffleResults = (arr) => {\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    return arr;\r\n}","import React from 'react';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardTitle,\r\n} from 'reactstrap'\r\nimport Rating from 'react-rating'\r\nclass YelpCard extends React.Component {\r\n    render() {\r\n        let distance = Math.round(this.props.business.distance / 1600)\r\n            return (\r\n                <Card className=\"card-profile profile-bg\">\r\n                    <a href={this.props.business.url}>\r\n                        <div style={{ height: \"231.762px\", display: 'flex', alignItems: 'center', overflow: 'hidden' }}>\r\n                            <CardImg src={this.props.business.image_url} style={{ flex: 'none', width: '100%' }} />\r\n                        </div>\r\n                    </a>\r\n                    <CardTitle tag=\"h3\">{this.props.business.name}</CardTitle>\r\n                    <CardText className=\"text-center\">\r\n                        <Rating\r\n                            readonly={true}\r\n                            initialRating={this.props.business.rating}\r\n                            emptySymbol={<i className=\"far fa-star\"></i>}\r\n                            fullSymbol={<i className=\"fas fa-star\"></i>}\r\n                        />\r\n                        {/* <br></br>\r\n                        <span className=\"text-center\">{this.props.business.is_closed\r\n                            ? <Badge color=\"danger\" pill>Closed</Badge>\r\n                            : <Badge color=\"success\" pill>Open</Badge>\r\n                        }\r\n                        </span> */}\r\n                        <br></br>\r\n                        <strong>{`${this.props.business.location.address1}, ${this.props.business.location.city}, ${this.props.business.location.zip_code}`}</strong>\r\n                        <br></br>\r\n                        <strong>{this.props.business.display_phone}</strong>\r\n                        <br></br>\r\n                    </CardText>\r\n                    <CardText className=\"text-left ml-3 mt-3 mb-3\">\r\n\r\n                        <strong>Distance:</strong> {distance === 1 ? distance + \" mile\" : distance + \" miles\"}\r\n                        <br></br>\r\n                        <strong>Price:</strong> {this.props.business.price}\r\n                        <br></br>\r\n                        <strong>Reviews:</strong> {this.props.business.review_count}\r\n                        <br></br>\r\n                        <strong>Categories:</strong> {this.props.business.categories.map((item, index) => {\r\n                            return (index ? ', ' : \"\") + item.title\r\n                        })}\r\n                    </CardText>\r\n                </Card>\r\n            )\r\n    }\r\n}\r\n\r\nexport default YelpCard;","import React, { Component } from 'react'\r\nimport * as yelpService from './services/yelpService'\r\nimport swal from \"sweetalert2\"\r\nimport { shuffleResults } from './services/reuseableFunctions'\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Button\r\n} from 'reactstrap'\r\nimport YelpCard from './components/YelpCard'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass RollTheDice extends Component {\r\n    state = {\r\n        results: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleLocationLogic()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.search !== prevProps.search) {\r\n            this.handleLocationLogic()\r\n        }\r\n    }\r\n\r\n    handleLocationLogic = () => {\r\n        if(this.props.search && this.props.search.location){\r\n            this.rtd()\r\n        } else {\r\n            this.getGeoLocation()\r\n        }\r\n    }\r\n\r\n    rtd = (position) => {\r\n        const data = {\r\n            ...this.props.search\r\n        }\r\n        if(position){\r\n            data.longitude = position.coords.longitude;\r\n            data.latitude = position.coords.latitude;\r\n        }\r\n\r\n        yelpService.getBusinesses(data)\r\n            .then(response => {\r\n                if (response.data.businesses) {\r\n                    if (!response.data.businesses[0]) {\r\n                        swal.fire({\r\n                            type: \"error\",\r\n                            title: \"No Results\",\r\n                            text: \"Please try a different search\",\r\n                            background: \"#171941\"\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            businesses: response.data.businesses\r\n                        })\r\n                        this.shuffleAndSlice(response.data)\r\n                    }\r\n                }\r\n                if (response.data.error) {\r\n                    swal.fire({\r\n                        type: \"error\",\r\n                        title: \"Error\",\r\n                        text: response.data.error.description,\r\n                        background: \"#171941\"\r\n                    })\r\n                }\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    shuffleAndSlice = (data) => {\r\n        if (!data.businesses) {\r\n            data = this.state.businesses\r\n        } else {\r\n            data = data.businesses\r\n        }\r\n        let shuffle = shuffleResults(data)\r\n        let three = shuffle.slice(0, 3)\r\n        this.setState({\r\n            results: three\r\n        })\r\n    }\r\n\r\n    getGeoLocation() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(this.rtd, this.throwSwalLocationError)\r\n        } else {\r\n            this.throwSwalLocationError()\r\n        }\r\n    }\r\n\r\n    throwSwalLocationError() {\r\n        swal.fire({\r\n            type: \"error\",\r\n            title: \"Location not found\",\r\n            text: \"Make sure you allow location access or do a custom search.\",\r\n            background: \"#171941\"\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <Row style={{ marginTop: \"100px\" }}>\r\n                        {this.state.results && this.state.results.map(item => {\r\n                            return (\r\n                                <Col sm=\"4\" key={item.id}>\r\n                                    <YelpCard business={item} />\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"text-center mt-3\">\r\n                            {this.state.results[0] ? <Button size=\"lg\" color=\"success\" onClick={this.shuffleAndSlice}>Reroll</Button> : null}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    search: state.search.item\r\n})\r\n\r\nexport default connect(mapStateToProps)(RollTheDice)","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport LandingPage from './LandingPage'\r\nimport RollTheDice from './RollTheDice'\r\n\r\nclass ContentRouter extends React.Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/rtd\" component={RollTheDice} />\r\n                <Route path=\"/\" component={LandingPage} />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentRouter","import * as yup from 'yup'\r\n\r\nconst initialValues = {\r\n    category: \"\",\r\n    location: \"\",\r\n    useLocation: false,\r\n    radius: \"1609\",\r\n    open_now: false\r\n}\r\n\r\nconst validationSchema  = yup.object().shape({ \r\n    category: yup\r\n        .string()\r\n        .required(\"Category is required\"),\r\n    location: yup\r\n        .string()\r\n        .when(\"useLocation\", {\r\n            is: false,\r\n            then: yup.string().required(\"Location is required\"),\r\n            otherwise: yup.string()\r\n        }),\r\n    useLocation: yup.bool(),\r\n    price: yup.string(),\r\n    radius: yup.string(),\r\n    open_now: yup.bool()\r\n})\r\n\r\nexport { initialValues, validationSchema }","import React from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    NavLink,\r\n    Container,\r\n    Row,\r\n    Input,\r\n    FormGroup,\r\n    Label,\r\n} from 'reactstrap'\r\nimport {\r\n    Formik,\r\n    Form,\r\n    ErrorMessage,\r\n    FieldArray\r\n} from 'formik'\r\nimport { initialValues, validationSchema } from './schemas/SearchForm'\r\nimport { connect } from 'react-redux'\r\nimport { setSearch } from './actions/searchActions'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass SearchForm extends React.Component {\r\n    state = {\r\n        isOpen: false,\r\n        price: []\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    priceBtn = (selected) => {\r\n        const index = this.state.price.indexOf(selected);\r\n        if (index < 0) {\r\n            this.state.price.push(selected);\r\n        } else {\r\n            this.state.price.splice(index, 1);\r\n        }\r\n        this.setState({ price: [...this.state.price] });\r\n    }\r\n\r\n    getBusiness = (location, data) => {\r\n        const searchObj = {\r\n            term: data.category,\r\n            radius: data.radius,\r\n            open_now: data.open_now,\r\n        }\r\n\r\n        //Price\r\n        if(this.state.price[0]){\r\n            let priceStr = \"\";\r\n            this.state.price.forEach(item => {\r\n                priceStr = priceStr + item + \",\"\r\n            })\r\n            searchObj.price = priceStr.substr(0, priceStr.length - 1)\r\n        }\r\n\r\n        //Location\r\n        if (location) {\r\n            searchObj.longitude = location.coords.longitude\r\n            searchObj.latitude = location.coords.latitude\r\n        } else {\r\n            searchObj.location = data.location\r\n        }\r\n        // getBusinesses(searchObj)\r\n        console.log(searchObj)\r\n        this.props.setSearch(searchObj)\r\n        this.toggleModal()\r\n        this.props.history.push(\"/rtd\")\r\n    }\r\n\r\n    checkUseLocation = data => {\r\n        if (data.useLocation) {\r\n            navigator.geolocation.getCurrentPosition(e => this.getBusiness(e, data))\r\n        } else {\r\n            this.getBusiness(null, data)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavLink onClick={this.toggleModal} href=\"#\">\r\n                    <i className=\"tim-icons icon-zoom-split\"></i>Search\r\n                </NavLink>\r\n                <Modal isOpen={this.state.isOpen} toggle={this.toggleModal} modalClassName=\"modal-black\">\r\n                    <div className=\"modal-header\">\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={this.toggleModal}>\r\n                            <i className=\"tim-icons icon-simple-remove\"></i>\r\n                        </button>\r\n                        <h5 className=\"modal-title\">Search</h5>\r\n                    </div>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={this.checkUseLocation}\r\n                    >\r\n                        {props => {\r\n                            const { values, handleChange, handleBlur, handleSubmit } = props\r\n                            return (\r\n                                <>\r\n                                    <Form className=\"form\" onSubmit={handleSubmit}>\r\n                                        <ModalBody>\r\n                                            <Container>\r\n                                                <Row>\r\n                                                    <label>Category</label>\r\n                                                    <Input\r\n                                                        name=\"category\"\r\n                                                        placeholder=\"Category\"\r\n                                                        type=\"text\"\r\n                                                        value={values.category}\r\n                                                        onChange={handleChange}\r\n                                                        onFocus={() => {\r\n                                                            this.setState({ categoryFocus: true })\r\n                                                        }}\r\n                                                        onBlur={e => {\r\n                                                            handleBlur(e)\r\n                                                            this.setState({ categoryFocus: false })\r\n                                                        }}\r\n                                                    />\r\n                                                    <ErrorMessage name=\"category\">\r\n                                                        {msg => <div className=\"text-danger\">{msg}</div>}\r\n                                                    </ErrorMessage>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <label>Location</label>\r\n                                                    <Input\r\n                                                        name=\"location\"\r\n                                                        placeholder=\"Location\"\r\n                                                        type=\"text\"\r\n                                                        value={values.location}\r\n                                                        onChange={handleChange}\r\n                                                        onFocus={() => {\r\n                                                            this.setState({ locationFocus: true })\r\n                                                        }}\r\n                                                        onBlur={e => {\r\n                                                            handleBlur(e)\r\n                                                            this.setState({ locationFocus: false })\r\n                                                        }}\r\n                                                        disabled={values.useLocation}\r\n                                                    />\r\n                                                    <ErrorMessage name=\"location\">\r\n                                                        {msg => <div className=\"text-danger\">{msg}</div>}\r\n                                                    </ErrorMessage>\r\n                                                </Row>\r\n                                                <Row className=\"mb-2\">\r\n                                                    <FormGroup check>\r\n                                                        <Label check>\r\n                                                            <Input\r\n                                                                name=\"useLocation\"\r\n                                                                type=\"checkbox\"\r\n                                                                value={values.useLocation}\r\n                                                                onChange={handleChange}\r\n                                                            />{' '}\r\n                                                            Use Location\r\n                                                    <span className=\"form-check-sign\">\r\n                                                                <span className=\"check\"></span>\r\n                                                            </span>\r\n                                                        </Label>\r\n                                                    </FormGroup>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Label>Distance</Label>\r\n                                                    <Input\r\n                                                        style={{ backgroundColor: \"#171941\" }}\r\n                                                        type=\"select\"\r\n                                                        name=\"radius\"\r\n                                                        value={values.radius}\r\n                                                        onChange={handleChange}\r\n                                                    >\r\n                                                        <option value={1609}>1 mile</option>\r\n                                                        <option value={8046}>5 miles</option>\r\n                                                        <option value={16093}>10 miles</option>\r\n                                                        <option value={32186}>20 miles</option>\r\n                                                    </Input>\r\n                                                </Row>\r\n                                                <Row className=\"mt-2\">\r\n                                                    <FieldArray\r\n                                                        name=\"price\"\r\n                                                        render={() => {\r\n                                                            let priceArr = [1, 2, 3, 4];\r\n                                                            return (\r\n                                                                <>\r\n                                                                    <label className=\"mr-3\">Price</label>\r\n                                                                    {priceArr.map(item => {\r\n                                                                        return (\r\n                                                                            <FormGroup key={item} check inline>\r\n                                                                                <Label check>\r\n                                                                                    <Input name={`price.${item}`} type=\"checkbox\" onClick={() => { this.priceBtn(item) }} /> {\"$\".repeat(item)}\r\n                                                                                    <span className=\"form-check-sign\">\r\n                                                                                        <span className=\"check\" />\r\n                                                                                    </span>\r\n                                                                                </Label>\r\n                                                                            </FormGroup>\r\n                                                                        )\r\n                                                                    })}\r\n                                                                </>\r\n                                                            )\r\n                                                        }}\r\n                                                    >\r\n                                                    </FieldArray>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <FormGroup check>\r\n                                                        <Label check>\r\n                                                            <Input\r\n                                                                name=\"open_now\"\r\n                                                                type=\"checkbox\"\r\n                                                                value={values.open_now}\r\n                                                                onChange={handleChange}\r\n                                                            />{''}\r\n                                                            Open Now\r\n                                                        <span className=\"form-check-sign\">\r\n                                                                <span className=\"check\"></span>\r\n                                                            </span>\r\n                                                        </Label>\r\n                                                    </FormGroup>\r\n                                                </Row>\r\n\r\n                                            </Container>\r\n                                        </ModalBody>\r\n                                        <ModalFooter>\r\n                                            <Button color=\"primary\" type=\"submit\">\r\n                                                Submit\r\n                                        </Button>\r\n                                        </ModalFooter>\r\n                                    </Form>\r\n                                </>\r\n                            )\r\n                        }}\r\n                    </Formik>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.search.items\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, { setSearch })(SearchForm))","export const setSearch = data => dispatch => {\r\n    dispatch({\r\n        type: \"SET_SEARCH\",\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const resetSearch = () => dispatch => {\r\n    dispatch({\r\n        type: \"RESET_SEARCH\"\r\n    })\r\n}","/*!\r\n\r\n=========================================================\r\n* BLK Design System PRO React - v1.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-pro-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n// reactstrap components\r\nimport {\r\n  UncontrolledCollapse,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  NavLink\r\n} from \"reactstrap\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport { resetSearch } from './actions/searchActions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass AppNavbar extends React.Component {\r\n  state = {\r\n    navbarColor: \"navbar-transparent\"\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.changeNavbarColor);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.changeNavbarColor);\r\n  }\r\n  changeNavbarColor = () => {\r\n    if (\r\n      document.documentElement.scrollTop > 299 ||\r\n      document.body.scrollTop > 299\r\n    ) {\r\n      this.setState({\r\n        navbarColor: \"bg-info\"\r\n      });\r\n    } else if (\r\n      document.documentElement.scrollTop < 300 ||\r\n      document.body.scrollTop < 300\r\n    ) {\r\n      this.setState({\r\n        navbarColor: \"navbar-transparent\"\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRoutes = route => {\r\n    this.props.history.push(route)\r\n  }\r\n\r\n  handleRollTheDice = () => {\r\n    this.props.resetSearch()\r\n    this.props.history.push(\"/rtd\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar className={\"fixed-top \" + this.state.navbarColor} expand=\"lg\">\r\n          <Container>\r\n            <div className=\"navbar-translate\">\r\n              <NavbarBrand to=\"/\" tag={Link}>\r\n                <span>Pick a Place</span>\r\n              </NavbarBrand>\r\n              <button className=\"navbar-toggler\" id=\"navigation\">\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </button>\r\n            </div>\r\n            <UncontrolledCollapse navbar toggler=\"#navigation\" style={{overflow: \"auto\"}}>\r\n              <div className=\"navbar-collapse-header\">\r\n                <Row>\r\n                  <Col className=\"collapse-brand\" xs=\"6\">\r\n                    <NavLink to=\"/\" tag={Link}>\r\n                      <span>Pick a Place</span>\r\n                    </NavLink>\r\n                  </Col>\r\n                  <Col className=\"collapse-close text-right\" xs=\"6\">\r\n                    <button className=\"navbar-toggler\" id=\"navigation\">\r\n                      <i className=\"tim-icons icon-simple-remove\" />\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink\r\n                    href=\"#\"\r\n                    onClick={this.handleRollTheDice}\r\n                  >\r\n                    <i className=\"tim-icons icon-app\"></i>\r\n                    Roll The Dice\r\n                  </NavLink>\r\n                </NavItem>\r\n                {/* <NavItem>\r\n                  <NavLink\r\n                    href=\"#\"\r\n                    onClick={() => this.props.history.push(\"/wyr\")}\r\n                    >\r\n                    <i className=\"tim-icons icon-atom\" />\r\n                    Would You Rather\r\n                  </NavLink>\r\n                </NavItem> */}\r\n                <NavItem>\r\n                    <SearchForm />\r\n                </NavItem>\r\n              </Nav>\r\n            </UncontrolledCollapse>\r\n          </Container>\r\n        </Navbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(null, { resetSearch })(AppNavbar));\r\n","const initialState = {\r\n    item:{\r\n        term: \"restaurant\",\r\n        radius: 8046,\r\n        limit: 50,\r\n        open_now: true,\r\n        price: 1\r\n    }\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case \"SET_SEARCH\":\r\n            return {\r\n                ...state,\r\n                item: action.payload\r\n            }\r\n        case \"RESET_SEARCH\":\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n    search: searchReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from \"./app/reducers\"\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState, \r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store","import React, { Component } from 'react'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ContentRouter from 'app/ContentRouter';\r\nimport AppNavbar from 'app/AppNavbar';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <AppNavbar />\r\n                    <ContentRouter />\r\n                </BrowserRouter>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","/*!\n\n=========================================================\n* BLK Design System PRO React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/blk-design-system-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\n\n// styles\nimport \"assets/css/nucleo-icons.css\";\nimport \"assets/scss/blk-design-system-pro-react.scss?v1.0.0\";\nimport \"assets/demo/demo.css\";\nimport \"assets/demo/react-demo.css\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}